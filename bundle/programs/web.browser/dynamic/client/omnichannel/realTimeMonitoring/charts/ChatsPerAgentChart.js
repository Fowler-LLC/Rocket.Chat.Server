function module(e,t,a){let n,r,l,s,i,c,o,u,d,h,p;a.link("@babel/runtime/helpers/extends",{default(e){n=e}},0),a.link("@babel/runtime/helpers/objectWithoutProperties",{default(e){r=e}},1),a.link("react",{default(e){l=e},useRef(e){s=e},useEffect(e){i=e}},0),a.link("./Chart",{default(e){c=e}},1),a.link("./useUpdateChartData",{useUpdateChartData(e){o=e}},2),a.link("../../../hooks/useEndpointDataExperimental",{useEndpointDataExperimental(e){u=e},ENDPOINT_STATES(e){d=e}},3),a.link("../../../contexts/TranslationContext",{useTranslation(e){h=e}},4),a.link("../../../../app/livechat/client/lib/chartHandler",{drawLineChart(e){p=e}},5);const f={agents:{}},k=(e,t,a)=>p(e,t,[a("Open"),a("Closed")],[],[[],[]],{legends:!0,anim:!0,smallTicks:!0}),m=e=>{let{params:t,reloadRef:a}=e,p=r(e,["params","reloadRef"]);const m=h(),E=s(),b=s(),x=o({context:b,canvas:E,t:m,init:k}),{data:C,state:D,reload:T}=u("livechat/analytics/dashboards/charts/chats-per-agent",t);a.current.chatsPerAgentChart=T;const{agents:g={}}=null!=C?C:f;return i(()=>{const e=async()=>{b.current=await k(E.current,b.current,m)};e()},[m]),i(()=>{D===d.DONE&&Object.entries(g).forEach(e=>{let[t,a]=e;x(t,[a.open,a.closed])})},[g,D,m,x]),l.createElement(c,n({ref:E},p))};a.exportDefault(m)}

