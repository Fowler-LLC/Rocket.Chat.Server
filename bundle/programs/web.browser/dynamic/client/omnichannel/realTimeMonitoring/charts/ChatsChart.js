function module(e,t,a){let n,l,r,s,u,o,c,i,d,h,p;a.link("@babel/runtime/helpers/extends",{default(e){n=e}},0),a.link("@babel/runtime/helpers/objectWithoutProperties",{default(e){l=e}},1),a.link("react",{default(e){r=e},useRef(e){s=e},useEffect(e){u=e}},0),a.link("./Chart",{default(e){o=e}},1),a.link("../../../hooks/useEndpointDataExperimental",{useEndpointDataExperimental(e){c=e},ENDPOINT_STATES(e){i=e}},2),a.link("../../../contexts/TranslationContext",{useTranslation(e){d=e}},3),a.link("../../../../app/livechat/client/lib/chartHandler",{drawDoughnutChart(e){h=e}},4),a.link("./useUpdateChartData",{useUpdateChartData(e){p=e}},5);const f=["Open","Queued","Closed"],k={open:0,queued:0,closed:0},C=(e,t,a)=>h(e,a("Chats"),t,f,Object.values(k)),E=e=>{let{params:t,reloadRef:a}=e,h=l(e,["params","reloadRef"]);const f=d(),E=s(),b=s(),m=p({context:b,canvas:E,t:f,init:C}),{data:D,state:x,reload:O}=c("livechat/analytics/dashboards/charts/chats",t);a.current.chatsChart=O;const{open:T,queued:v,closed:N}=null!=D?D:k;return u(()=>{const e=async()=>{b.current=await C(E.current,b.current,f)};e()},[f]),u(()=>{x===i.DONE&&(m(f("Open"),[T]),m(f("Closed"),[N]),m(f("Queued"),[v]))},[N,T,v,x,f,m]),r.createElement(o,n({ref:E},h))};a.exportDefault(E)}

